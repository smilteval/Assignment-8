{"version":3,"sources":["components/TableCell.jsx","components/TableRow.jsx","components/Table.jsx","App.js","reportWebVitals.js","index.js"],"names":["TableCell","props","handleClick","className","onClick","TableRow","numCols","color","cols","i","push","Table","numRows","rows","id","App","addRows","setState","state","addCols","removeRows","removeCols","selectColor","event","target","value","style","backgroundColor","cellColor","this","name","onChange","selected","disabled","hidden","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fc95041e.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function TableCell(props) {\r\n    \r\n    let{\r\n        handleClick\r\n    } = props;\r\n\r\n    return (\r\n        <td \r\n            className = \"cell\"\r\n            onClick = {handleClick}    \r\n        ></td>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport TableCell from \"./TableCell\";\r\n\r\nexport default function TableRow(props) {\r\n\r\n    let {\r\n        numCols,\r\n        color,\r\n        handleClick,\r\n    } = props\r\n\r\n    let cols = [];\r\n\r\n    for(let i = 0; i < numCols; i++){\r\n        cols.push(\r\n            <TableCell\r\n                color={color}\r\n                handleClick={handleClick}\r\n            />\r\n        )\r\n    }\r\n\r\n    return (\r\n        <tr className = \"row\">\r\n            {cols}\r\n        </tr>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport TableRow from './TableRow';\r\n\r\nexport default function Table(props) {\r\n\r\n    let {\r\n        numRows,\r\n        numCols,\r\n        color,\r\n        handleClick,\r\n    } = props;\r\n\r\n    let rows = [];\r\n\r\n    for(let i = 0; i < numRows; i++){\r\n        rows.push(\r\n            <TableRow \r\n                numCols={numCols}\r\n                color={color}\r\n                handleClick={handleClick}\r\n            />\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <table id = \"table\">\r\n                <tbody>\r\n                    {rows}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    )\r\n}\r\n","import './App.css';\r\nimport Table from \"./components/Table\"\r\n\r\nimport React, { Component } from 'react'\r\n\r\nexport default class App extends Component {\r\n\r\n  constructor(){\r\n    super();\r\n    this.state={\r\n      numRows: 3,\r\n      numCols: 3,\r\n      cellColor: \" \",\r\n    }\r\n  }\r\n\r\n  addRows=()=>{\r\n    this.setState({\r\n      numRows: this.state.numRows + 1\r\n    })\r\n  }\r\n\r\n  addCols=()=>{\r\n    this.setState({\r\n      numCols: this.state.numCols + 1\r\n    })\r\n  }\r\n\r\n  removeRows=()=>{\r\n    this.setState({\r\n      numRows: this.state.numRows - 1\r\n    })\r\n  }\r\n\r\n  removeCols=()=>{\r\n    this.setState({\r\n      numCols: this.state.numCols - 1\r\n    })\r\n  }\r\n\r\n  selectColor=(event)=>{\r\n    this.setState({\r\n      color: event.target.value\r\n    })\r\n  }\r\n\r\n  handleClick=(event)=>{\r\n    event.target.style.backgroundColor = this.state.color;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Table \r\n          numRows = {this.state.numRows}\r\n          numCols = {this.state.numCols}\r\n          color = {this.state.color}\r\n          handleClick = {this.handleClick}\r\n        />\r\n\r\n        <button id=\"add-rows-btn\" onClick={this.addRows}>Add Rows</button>\r\n        <button id=\"add-cols-btn\" onClick={this.addCols}>Add Columns</button>\r\n        <button id=\"remove-rows-btn\" onClick={this.removeRows}>Remove Rows</button>\r\n        <button id=\"remove-cols-btn\" onClick={this.removeCols}>Remove Columns</button>\r\n      \r\n        <div id = \"color-selection-panel\">\r\n          <h3>Select a color: </h3>\r\n          <select name=\"colors\" id=\"color-dropdown\" value={this.state.color} onChange={this.selectColor}>\r\n            <option value=\" \" selected disabled hidden> Colors </option>\r\n            <option className=\"red\" value=\"red\">red</option>\r\n            <option className=\"blue\" value=\"blue\">blue</option>\r\n            <option className=\"green\" value=\"green\">green</option>\r\n            <option className=\"yellow\" value=\"yellow\">yellow</option>\r\n            <option className=\"orange\" value=\"orange\">orange</option>\r\n            <option className=\"purple\" value=\"purple\">purple</option>\r\n            <option className=\"pink\" value=\"pink\">pink</option>\r\n            <option className=\"brown\" value=\"brown\">brown</option>\r\n          </select>  \r\n        </div>\r\n\r\n        <h3>To color one cell, select a color and click on that cell.</h3>\r\n        \r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}